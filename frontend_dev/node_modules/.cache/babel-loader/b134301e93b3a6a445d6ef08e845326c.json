{"ast":null,"code":"import io from 'socket.io-client';\nimport { ip } from '../config';\nconst socketUrl = {\n  url: `http://${ip}:5002/`,\n  urlMain: 'main'\n};\nlet socketBasic = null;\nlet socketMain = null;\nexport const connectBasicSocket = (token, emitEvent) => {\n  var _socketBasic;\n\n  if ((_socketBasic = socketBasic) !== null && _socketBasic !== void 0 && _socketBasic.connected) return;\n  socketBasic = io.connect(socketUrl.url, {\n    transports: ['websocket'],\n    autoConnect: true,\n    forceNew: true,\n    query: `${token}siousiou`\n  });\n  socketBasic.on('connect', data => {\n    console.log('connect data => ', data);\n  });\n  socketBasic.emit(emitEvent, {});\n};\nexport const connectMainSocket = async token => {\n  socketMain = io.connect(socketUrl.url + socketUrl.urlMain, {\n    transports: ['websocket'],\n    autoConnect: true,\n    forceNew: true,\n    query: `${token}siousiou`\n  });\n  socketMain.on('DataBaseChange', data => {\n    console.log('hihi data => ', data);\n  }); //socketMain.emit(\"DataBaseChange\",{})\n\n  return socketMain;\n};","map":{"version":3,"sources":["/Users/siou/Downloads/code/performance/frontend_dev/src/page/socketIo.js"],"names":["io","ip","socketUrl","url","urlMain","socketBasic","socketMain","connectBasicSocket","token","emitEvent","connected","connect","transports","autoConnect","forceNew","query","on","data","console","log","emit","connectMainSocket"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAAQC,EAAR,QAAiB,WAAjB;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAG,UAASF,EAAG,QADJ;AAEdG,EAAAA,OAAO,EAAE;AAFK,CAAlB;AAKA,IAAIC,WAAW,GAAG,IAAlB;AACA,IAAIC,UAAU,GAAG,IAAjB;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;AAAA;;AACpD,sBAAIJ,WAAJ,yCAAI,aAAaK,SAAjB,EAA4B;AAE5BL,EAAAA,WAAW,GAAGL,EAAE,CAACW,OAAH,CAAWT,SAAS,CAACC,GAArB,EAA0B;AACpCS,IAAAA,UAAU,EAAE,CAAC,WAAD,CADwB;AAEpCC,IAAAA,WAAW,EAAE,IAFuB;AAGpCC,IAAAA,QAAQ,EAAE,IAH0B;AAIpCC,IAAAA,KAAK,EAAG,GAAEP,KAAM;AAJoB,GAA1B,CAAd;AAOAH,EAAAA,WAAW,CAACW,EAAZ,CAAe,SAAf,EAA2BC,IAAD,IAAU;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,IAA/B;AACH,GAFD;AAGAZ,EAAAA,WAAW,CAACe,IAAZ,CAAiBX,SAAjB,EAA4B,EAA5B;AACH,CAdM;AAeP,OAAO,MAAMY,iBAAiB,GAAE,MAAOb,KAAP,IAAiB;AAC7CF,EAAAA,UAAU,GAAGN,EAAE,CAACW,OAAH,CAAWT,SAAS,CAACC,GAAV,GAAgBD,SAAS,CAACE,OAArC,EAA8C;AACvDQ,IAAAA,UAAU,EAAE,CAAC,WAAD,CAD2C;AAEvDC,IAAAA,WAAW,EAAE,IAF0C;AAGvDC,IAAAA,QAAQ,EAAE,IAH6C;AAIvDC,IAAAA,KAAK,EAAG,GAAEP,KAAM;AAJuC,GAA9C,CAAb;AAOAF,EAAAA,UAAU,CAACU,EAAX,CAAc,gBAAd,EAAiCC,IAAD,IAAU;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACH,GAFD,EAR6C,CAW7C;;AACA,SAAOX,UAAP;AACH,CAbM","sourcesContent":["import io from 'socket.io-client';\nimport {ip} from '../config';\nconst socketUrl = {\n    url: `http://${ip}:5002/`,\n    urlMain: 'main',\n}\n\nlet socketBasic = null;\nlet socketMain = null;\nexport const connectBasicSocket = (token, emitEvent) => {\n    if (socketBasic?.connected) return;\n\n    socketBasic = io.connect(socketUrl.url, {\n        transports: ['websocket'],\n        autoConnect: true,\n        forceNew: true,\n        query: `${token}siousiou`,\n    });\n\n    socketBasic.on('connect', (data) => {\n        console.log('connect data => ',data)\n    });\n    socketBasic.emit(emitEvent, {})\n}\nexport const connectMainSocket =async (token) => {\n    socketMain = io.connect(socketUrl.url + socketUrl.urlMain, {\n        transports: ['websocket'],\n        autoConnect: true,\n        forceNew: true,\n        query: `${token}siousiou`,\n    });\n\n    socketMain.on('DataBaseChange', (data) => {\n        console.log('hihi data => ', data)\n    });\n    //socketMain.emit(\"DataBaseChange\",{})\n    return socketMain\n}"]},"metadata":{},"sourceType":"module"}