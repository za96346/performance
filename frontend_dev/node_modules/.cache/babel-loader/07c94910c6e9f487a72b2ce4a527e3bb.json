{"ast":null,"code":"export function bubble_sorting(arr, tar_position, direct) {\n  //desc 高到低\n  //asc 低到高\n  var len = arr ? arr.length : 0;\n\n  if (direct === 'desc') {\n    while (len > 1) {\n      for (let i = 0; i < len; i++) {\n        if (arr[i][tar_position] < arr[i + 1][tar_position]) {\n          [arr[i], arr[i + 1]] = [arr[i + 1], arr[i]];\n        }\n      }\n\n      len -= 1;\n    }\n  } else if (direct === 'asc') {\n    while (len > 1) {\n      for (let i = 0; i < len; i++) {\n        if (arr[i][tar_position] > arr[i + 1][tar_position]) {\n          [arr[i], arr[i + 1]] = [arr[i + 1], arr[i]];\n        }\n      }\n\n      len -= 1;\n    }\n  }\n\n  console.log(arr);\n  return arr;\n}","map":{"version":3,"sources":["/Users/admin/Downloads/code/dajia/frontend/src/page/ algorithm/bubble_sorting.js"],"names":["bubble_sorting","arr","tar_position","direct","len","length","i","console","log"],"mappings":"AAAA,OAAO,SAASA,cAAT,CAAwBC,GAAxB,EAA4BC,YAA5B,EAAyCC,MAAzC,EAAgD;AACnD;AACA;AACA,MAAIC,GAAG,GAACH,GAAG,GAACA,GAAG,CAACI,MAAL,GAAY,CAAvB;;AACA,MAAGF,MAAM,KAAG,MAAZ,EAAmB;AACf,WAAMC,GAAG,GAAC,CAAV,EAAY;AACR,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,GAAd,EAAkBE,CAAC,EAAnB,EAAsB;AAElB,YAAGL,GAAG,CAACK,CAAD,CAAH,CAAOJ,YAAP,IAAqBD,GAAG,CAACK,CAAC,GAAC,CAAH,CAAH,CAASJ,YAAT,CAAxB,EAA+C;AAC3C,WAACD,GAAG,CAACK,CAAD,CAAJ,EAAQL,GAAG,CAACK,CAAC,GAAC,CAAH,CAAX,IAAkB,CAACL,GAAG,CAACK,CAAC,GAAC,CAAH,CAAJ,EAAUL,GAAG,CAACK,CAAD,CAAb,CAAlB;AACH;AACJ;;AACDF,MAAAA,GAAG,IAAE,CAAL;AACH;AACJ,GAVD,MAWK,IAAGD,MAAM,KAAG,KAAZ,EAAkB;AACnB,WAAMC,GAAG,GAAC,CAAV,EAAY;AACR,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,GAAd,EAAkBE,CAAC,EAAnB,EAAsB;AAElB,YAAGL,GAAG,CAACK,CAAD,CAAH,CAAOJ,YAAP,IAAqBD,GAAG,CAACK,CAAC,GAAC,CAAH,CAAH,CAASJ,YAAT,CAAxB,EAA+C;AAC3C,WAACD,GAAG,CAACK,CAAD,CAAJ,EAAQL,GAAG,CAACK,CAAC,GAAC,CAAH,CAAX,IAAkB,CAACL,GAAG,CAACK,CAAC,GAAC,CAAH,CAAJ,EAAUL,GAAG,CAACK,CAAD,CAAb,CAAlB;AACH;AACJ;;AACDF,MAAAA,GAAG,IAAE,CAAL;AACH;AACJ;;AACDG,EAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACA,SAAOA,GAAP;AACH","sourcesContent":["export function bubble_sorting(arr,tar_position,direct){\n    //desc 高到低\n    //asc 低到高\n    var len=arr?arr.length:0\n    if(direct==='desc'){\n        while(len>1){\n            for(let i=0;i<len;i++){\n                \n                if(arr[i][tar_position]<arr[i+1][tar_position]){\n                    [arr[i],arr[i+1]]=[arr[i+1],arr[i]]\n                }\n            }\n            len-=1\n        }\n    }\n    else if(direct==='asc'){\n        while(len>1){\n            for(let i=0;i<len;i++){\n                \n                if(arr[i][tar_position]>arr[i+1][tar_position]){\n                    [arr[i],arr[i+1]]=[arr[i+1],arr[i]]\n                }\n            }\n            len-=1\n        }\n    }\n    console.log(arr)\n    return arr\n}"]},"metadata":{},"sourceType":"module"}