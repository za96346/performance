{"ast":null,"code":"import { io, Manager } from 'socket.io-client';\nimport { ip } from '../config';\nconst socketUrl = {\n  url: `http://${ip}:5002`,\n  urlMain: '/main'\n};\nlet token = 'wefijwoeijfoiwjof';\nlet socketManager = new Manager(socketUrl.url, {\n  transports: ['websocket'],\n  autoConnect: true,\n  forceNew: true,\n  query: `${token}siousiou`\n});\nlet socketBasic = socketManager.socket('/');\nlet socketMain = socketManager.socket(socketUrl.urlMain);\nexport const connectBasicSocket = token => {\n  if (socketBasic !== null && socketBasic !== void 0 && socketBasic.connected) return; // socketBasic = io.connect(socketUrl.url, {\n  //     transports: ['websocket'],\n  //     autoConnect: true,\n  //     forceNew: true,\n  //     query: `${token}siousiou`,\n  // });\n\n  socketBasic.on('connect', data => {\n    console.log('connect data => ', data);\n  });\n};\nexport const disconnectSocket = () => {\n  if (!socketBasic) return;\n  socketBasic === null || socketBasic === void 0 ? void 0 : socketBasic.disconnect();\n};\nexport const connectMainSocket = async token => {\n  console.log(\"it is main socket\");\n  socketMain = io.connect(socketUrl.url + socketUrl.urlMain, {\n    transports: ['websocket'],\n    autoConnect: true,\n    forceNew: true,\n    query: `${token}siousiou`\n  });\n  socketMain.on('DataBaseChange', data => {\n    console.log('hihi data => ', data);\n  });\n};","map":{"version":3,"sources":["/Users/siou/Downloads/code/performance/frontend_dev/src/page/socketIo.js"],"names":["io","Manager","ip","socketUrl","url","urlMain","token","socketManager","transports","autoConnect","forceNew","query","socketBasic","socket","socketMain","connectBasicSocket","connected","on","data","console","log","disconnectSocket","disconnect","connectMainSocket","connect"],"mappings":"AAAA,SAAQA,EAAR,EAAWC,OAAX,QAAyB,kBAAzB;AACA,SAAQC,EAAR,QAAiB,WAAjB;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAG,UAASF,EAAG,OADJ;AAEdG,EAAAA,OAAO,EAAE;AAFK,CAAlB;AAIA,IAAIC,KAAK,GAAG,mBAAZ;AACA,IAAIC,aAAa,GAAI,IAAIN,OAAJ,CAAYE,SAAS,CAACC,GAAtB,EAA0B;AAC3CI,EAAAA,UAAU,EAAE,CAAC,WAAD,CAD+B;AAE3CC,EAAAA,WAAW,EAAE,IAF8B;AAG3CC,EAAAA,QAAQ,EAAE,IAHiC;AAI3CC,EAAAA,KAAK,EAAG,GAAEL,KAAM;AAJ2B,CAA1B,CAArB;AAMA,IAAIM,WAAW,GAAGL,aAAa,CAACM,MAAd,CAAqB,GAArB,CAAlB;AACA,IAAIC,UAAU,GAAGP,aAAa,CAACM,MAAd,CAAqBV,SAAS,CAACE,OAA/B,CAAjB;AAEA,OAAO,MAAMU,kBAAkB,GAAIT,KAAD,IAAW;AACzC,MAAIM,WAAJ,aAAIA,WAAJ,eAAIA,WAAW,CAAEI,SAAjB,EAA4B,OADa,CAGzC;AACA;AACA;AACA;AACA;AACA;;AAEAJ,EAAAA,WAAW,CAACK,EAAZ,CAAe,SAAf,EAA2BC,IAAD,IAAU;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,IAA/B;AACH,GAFD;AAGH,CAbM;AAeP,OAAO,MAAMG,gBAAgB,GAAG,MAAM;AAClC,MAAI,CAACT,WAAL,EAAkB;AAClBA,EAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEU,UAAb;AACH,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAE,MAAOjB,KAAP,IAAiB;AAC7Ca,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAN,EAAAA,UAAU,GAAGd,EAAE,CAACwB,OAAH,CAAWrB,SAAS,CAACC,GAAV,GAAgBD,SAAS,CAACE,OAArC,EAA8C;AACvDG,IAAAA,UAAU,EAAE,CAAC,WAAD,CAD2C;AAEvDC,IAAAA,WAAW,EAAE,IAF0C;AAGvDC,IAAAA,QAAQ,EAAE,IAH6C;AAIvDC,IAAAA,KAAK,EAAG,GAAEL,KAAM;AAJuC,GAA9C,CAAb;AAOAQ,EAAAA,UAAU,CAACG,EAAX,CAAc,gBAAd,EAAiCC,IAAD,IAAU;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACH,GAFD;AAGH,CAZM","sourcesContent":["import {io,Manager} from 'socket.io-client';\nimport {ip} from '../config';\nconst socketUrl = {\n    url: `http://${ip}:5002`,\n    urlMain: '/main',\n}\nlet token = 'wefijwoeijfoiwjof'\nlet socketManager =  new Manager(socketUrl.url,{\n    transports: ['websocket'],\n    autoConnect: true,\n    forceNew: true,\n    query: `${token}siousiou`,\n})\nlet socketBasic = socketManager.socket('/');\nlet socketMain = socketManager.socket(socketUrl.urlMain);\n\nexport const connectBasicSocket = (token) => {\n    if (socketBasic?.connected) return;\n\n    // socketBasic = io.connect(socketUrl.url, {\n    //     transports: ['websocket'],\n    //     autoConnect: true,\n    //     forceNew: true,\n    //     query: `${token}siousiou`,\n    // });\n\n    socketBasic.on('connect', (data) => {\n        console.log('connect data => ',data)\n    });\n}\n\nexport const disconnectSocket = () => {\n    if (!socketBasic) return;\n    socketBasic?.disconnect();\n};\n\nexport const connectMainSocket =async (token) => {\n    console.log(\"it is main socket\")\n    socketMain = io.connect(socketUrl.url + socketUrl.urlMain, {\n        transports: ['websocket'],\n        autoConnect: true,\n        forceNew: true,\n        query: `${token}siousiou`,\n    });\n\n    socketMain.on('DataBaseChange', (data) => {\n        console.log('hihi data => ', data)\n    });\n}"]},"metadata":{},"sourceType":"module"}