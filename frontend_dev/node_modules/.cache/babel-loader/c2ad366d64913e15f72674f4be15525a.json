{"ast":null,"code":"import _toConsumableArray from\"/Users/admin/Downloads/code/dajia/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"/Users/admin/Downloads/code/dajia/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _asyncToGenerator from\"/Users/admin/Downloads/code/dajia/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/admin/Downloads/code/dajia/frontend/node_modules/@babel/runtime/regenerator/index.js\";import{banch_index,backend,year_performance,insert_banch_table,updata_performance_table,new_emp_insert_performance_table,select_all_banch}from\"../api\";export function check_and_recatch_data(_x,_x2,_x3){return _check_and_recatch_data.apply(this,arguments);}function _check_and_recatch_data(){_check_and_recatch_data=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(token,synchronize_update,sec){var result1,result2,result3,result4;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return banch_index(token);case 2:result1=_context.sent;_context.next=5;return backend(token);case 5:result2=_context.sent;_context.next=8;return year_performance(token);case 8:result3=_context.sent;_context.next=11;return select_all_banch(token);case 11:result4=_context.sent;synchronize_update(true);//設定同步頁面開始\nsetTimeout(function(){if(result1===true&&result2===true&&result3===true&&result4===true){//代表資料已經更新\nsynchronize_update(false);//設定同步頁面結束\nreturn true;}return false;},sec);case 14:case\"end\":return _context.stop();}}},_callee);}));return _check_and_recatch_data.apply(this,arguments);};export function search(_x4,_x5,_x6,_x7,_x8,_x9,_x10,_x11){return _search.apply(this,arguments);}function _search(){_search=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(arr,item_index,new_item,reCatchData,synchronize_update,set_new_emp,set_page_data_arr,page){var list,temp,count,_data,none,_iterator,_step,_data2,data,new_data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://reCatchData=reCatchData.current\n// arr 原陣列 ,,  item_index 更新的資料所在的畫面位置  ,,  new_item 更新的資料\n// function search 把原先的陣列 要更新的資料刪除 之後 加入更新的資料\nlist=[];temp=[];count=0;console.log('-----------------------------------');console.log('arr 原陣列',arr);console.log('item_index 要更新的位置',item_index);console.log('new_item 新的資料',new_item);_data=0;case 8:if(!(_data<arr.length)){_context2.next=22;break;}if(!(arr[_data].length===1)){_context2.next=12;break;}_context2.next=19;break;case 12:if(!(_data!==item_index)){_context2.next=16;break;}list.push(arr[_data]);_context2.next=19;break;case 16://如果跑到的data與item_index要插入的位置相等 \n//新增  並且帶入check function\nlist.push(new_item);_context2.next=19;return check_arr(new_item,reCatchData,synchronize_update);case 19:_data++;_context2.next=8;break;case 22:for(none=0;none<list.length;none++){//尋找[[],[],[]] 空字串有幾個 \ncount=0;_iterator=_createForOfIteratorHelper(list[none]);try{for(_iterator.s();!(_step=_iterator.n()).done;){_data2=_step.value;if(_data2===''){count+=1;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}if(count<list[none].length-2){temp.push(list[none]);}}data=JSON.parse(window.sessionStorage.getItem('banch_index'));data[page]=temp;window.sessionStorage.setItem('banch_index',JSON.stringify(data));new_data=JSON.parse(window.sessionStorage.getItem('banch_index'))[page];set_page_data_arr([].concat(_toConsumableArray(new_data),[['+']]));setTimeout(function(){set_new_emp('已儲存變更');},500);return _context2.abrupt(\"return\",temp);case 30:case\"end\":return _context2.stop();}}},_callee2);}));return _search.apply(this,arguments);};export function update(_x12,_x13){return _update.apply(this,arguments);}function _update(){_update=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(new_item,set_new_emp){var token,result1,result2,result3,timer;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0://function update 更新 performance_per_month的資料\ntoken=window.sessionStorage.getItem('token');_context3.next=3;return updata_performance_table(new_item,token);case 3:result1=_context3.sent;_context3.next=6;return backend(token);case 6:result2=_context3.sent;_context3.next=9;return year_performance(token);case 9:result3=_context3.sent;timer=setInterval(function(){if(result1===true&&result2===true&&result3===true){set_new_emp('已儲存變更');clearInterval(timer);}},100);case 11:case\"end\":return _context3.stop();}}},_callee3);}));return _update.apply(this,arguments);}export function check_arr(_x14,_x15,_x16){return _check_arr.apply(this,arguments);}function _check_arr(){_check_arr=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(arr,reCatchData,synchronize_update){var count,token,_iterator2,_step2,data,result,a;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0://當資料填完整後就request api\n//arr=[帳號,密碼,名字,組別,編號,開始日期,職位權限,工作狀態]\ncount=0;token=window.sessionStorage.getItem('token');_iterator2=_createForOfIteratorHelper(arr);try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){data=_step2.value;if(data!==''){count+=1;}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}if(!(count===arr.length)){_context4.next=20;break;}_context4.next=7;return insert_banch_table(token,arr);case 7:result=_context4.sent;if(!(result==='update'&&reCatchData===true)){_context4.next=13;break;}check_and_recatch_data(token,synchronize_update,200);//負責設定同步畫面及同步抓取資料\nreCatchData=false;//重新抓取資料狀態 否\n_context4.next=20;break;case 13:if(!(result==='insert')){_context4.next=20;break;}a=window.prompt('請輸入新員工 開始的資料(ex:年 月)').split(' ');//api\na=[arr[0],parseInt(a[0]),parseInt(a[1])];_context4.next=18;return new_emp_insert_performance_table(token,a);case 18://新增 新進員工的 每月的績效\ncheck_and_recatch_data(token,synchronize_update,200);//負責設定同步畫面及同步抓取資料\nreCatchData=false;//重新抓取資料狀態 否\ncase 20:case\"end\":return _context4.stop();}}},_callee4);}));return _check_arr.apply(this,arguments);};export function obj_to_arr(obj){var a=Object.values(obj).map(function(v){return v;});console.log('物件轉陣列',a);return a;};export function rule_num_letter(e){var value=e.target.value;var ascii;var return_string='';for(var num=0;num<value.length;num++){ascii=value.codePointAt(num);if(ascii>=48&&ascii<=57||ascii>=65&&ascii<=90||ascii>=97&&ascii<=122){return_string+=String.fromCharCode(ascii);}}e.target.value=return_string;return return_string;}export function rule_num(e,maxValue){var value=e.target.value;var ascii;var return_string='';for(var num=0;num<value.length;num++){ascii=value.codePointAt(num);if(ascii>=48&&ascii<=57){if(num===0&&ascii===48){continue;//跳過第一個數為0\n}return_string+=String.fromCharCode(ascii);}}return_string=parseInt(return_string.length>0?return_string:'0');//如果是空時  就替換成 '0'\nreturn_string=return_string>maxValue?maxValue:return_string;//如果出來的值大於最大值時，就把他釘在最大值\ne.target.value=return_string;return return_string;}","map":{"version":3,"sources":["/Users/admin/Downloads/code/dajia/frontend/src/page/method/method_func.js"],"names":["banch_index","backend","year_performance","insert_banch_table","updata_performance_table","new_emp_insert_performance_table","select_all_banch","check_and_recatch_data","token","synchronize_update","sec","result1","result2","result3","result4","setTimeout","search","arr","item_index","new_item","reCatchData","set_new_emp","set_page_data_arr","page","list","temp","count","console","log","data","length","push","check_arr","none","JSON","parse","window","sessionStorage","getItem","setItem","stringify","new_data","update","timer","setInterval","clearInterval","result","a","prompt","split","parseInt","obj_to_arr","obj","Object","values","map","v","rule_num_letter","e","value","target","ascii","return_string","num","codePointAt","String","fromCharCode","rule_num","maxValue"],"mappings":"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","sourcesContent":["import { banch_index,backend,year_performance,insert_banch_table, updata_performance_table, new_emp_insert_performance_table, select_all_banch } from \"../api\"\nexport async function check_and_recatch_data(token,synchronize_update,sec){\n    //負責設定同步畫面及同步抓取資料\n    var result1=await banch_index(token)\n    var result2=await backend(token)\n    var result3=await year_performance(token)\n    var result4=await select_all_banch(token)\n    synchronize_update(true)//設定同步頁面開始\n    setTimeout(() => {\n        if(result1===true&&result2===true&&result3===true&&result4===true){\n                //代表資料已經更新\n            synchronize_update(false)//設定同步頁面結束\n            return true\n        }\n        return false\n    }, sec);\n};\n\nexport async function search(arr,item_index,new_item,reCatchData,synchronize_update,set_new_emp,set_page_data_arr,page){\n    //reCatchData=reCatchData.current\n    // arr 原陣列 ,,  item_index 更新的資料所在的畫面位置  ,,  new_item 更新的資料\n    // function search 把原先的陣列 要更新的資料刪除 之後 加入更新的資料\n        var list=[]\n        var temp=[]\n        var count=0\n        console.log('-----------------------------------')\n        console.log('arr 原陣列',arr)\n        console.log('item_index 要更新的位置',item_index)\n        console.log('new_item 新的資料',new_item)\n    \n        for(let data=0;data<arr.length;data++){\n            if(arr[data].length===1){\n                //如果判斷到 陣列裡面是「’+‘」號  就不加入 跳過\n            }\n            else if(data!==item_index){\n                list.push(arr[data])\n            }\n            else{\n                //如果跑到的data與item_index要插入的位置相等 \n                //新增  並且帶入check function\n                list.push(new_item)\n                await check_arr(new_item,reCatchData,synchronize_update)\n            }\n        }\n        \n        for(let none=0;none<list.length;none++){\n            //尋找[[],[],[]] 空字串有幾個 \n            count=0\n            for(let data of list[none]){\n                if(data===''){\n                    count+=1\n                }\n            }\n            if(count<list[none].length-2){\n                temp.push(list[none])\n            }\n        }\n\n        var data=JSON.parse(window.sessionStorage.getItem('banch_index'))\n        data[page]=temp\n            \n        window.sessionStorage.setItem('banch_index',JSON.stringify(data))\n        var new_data=JSON.parse(window.sessionStorage.getItem('banch_index'))[page]\n        set_page_data_arr([...new_data,['+']])\n        setTimeout(()=>{\n            set_new_emp('已儲存變更')\n        },500)\n        return temp\n};\n\nexport async function update(new_item,set_new_emp){\n    //function update 更新 performance_per_month的資料\n    var token=window.sessionStorage.getItem('token')\n    var result1=await updata_performance_table(new_item,token)\n    var result2= await backend(token)\n    var result3=await year_performance(token)\n\n    var timer=setInterval(()=>{\n        if(result1===true&&result2===true&&result3===true){\n            set_new_emp('已儲存變更')\n            clearInterval(timer)\n        }\n    },100)\n}\n\nexport async function check_arr(arr,reCatchData,synchronize_update){\n    //當資料填完整後就request api\n    //arr=[帳號,密碼,名字,組別,編號,開始日期,職位權限,工作狀態]\n    var count=0\n    var token=window.sessionStorage.getItem('token')\n    for(var data of arr){\n        if(data!==''){\n            count+=1\n        }\n    }\n    if(count===arr.length){\n        var result=await insert_banch_table(token,arr) //api\n        //result?alert(`資料庫存取成功${result}`):alert(`資料庫存取失敗${result}`)\n        if(result==='update' &&reCatchData===true){\n            check_and_recatch_data(token,synchronize_update,200)//負責設定同步畫面及同步抓取資料\n            reCatchData=false//重新抓取資料狀態 否\n        }\n        else if(result==='insert'){\n            var a=window.prompt('請輸入新員工 開始的資料(ex:年 月)').split(' ')\n            //api\n            a=[arr[0],parseInt(a[0]),parseInt(a[1])]\n            await new_emp_insert_performance_table(token,a)//新增 新進員工的 每月的績效\n            check_and_recatch_data(token,synchronize_update,200)//負責設定同步畫面及同步抓取資料\n            reCatchData=false//重新抓取資料狀態 否\n        }\n        \n    }\n};\n\nexport function obj_to_arr(obj){\n    var a=Object.values(obj).map((v)=>{\n        return v\n    })\n    console.log('物件轉陣列',a)\n    return a\n};\n\nexport function rule_num_letter(e){\n    var value =e.target.value\n    var ascii\n    var return_string=''\n\n    for(let num=0;num<value.length;num++){\n        ascii=value.codePointAt(num)\n        if((ascii>=48&&ascii<=57)||(ascii>=65&&ascii<=90)||(ascii>=97&&ascii<=122)){\n            return_string+=String.fromCharCode(ascii)\n        }\n    }\n    e.target.value=return_string\n    return return_string\n\n}\nexport function rule_num(e,maxValue){\n    var value =e.target.value\n    var ascii\n    var return_string=''\n\n    for(let num=0;num<value.length;num++){\n        ascii=value.codePointAt(num)\n        if((ascii>=48&&ascii<=57)){\n            if(num===0 && ascii===48){\n                continue;//跳過第一個數為0\n            }\n            return_string+=String.fromCharCode(ascii)\n        }\n    }\n    return_string=parseInt(return_string.length>0?return_string:'0')//如果是空時  就替換成 '0'\n    return_string=return_string>maxValue?maxValue:return_string//如果出來的值大於最大值時，就把他釘在最大值\n    e.target.value=return_string\n    return return_string\n\n}"]},"metadata":{},"sourceType":"module"}