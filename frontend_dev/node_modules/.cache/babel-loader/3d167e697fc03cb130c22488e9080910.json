{"ast":null,"code":"import { io, Manager } from 'socket.io-client';\nimport { ip } from '../config';\nconst socketUrl = {\n  url: `http://${ip}:5002`,\n  urlMain: '/main'\n};\nlet socketManager = new Manager(socketUrl.url);\nlet socketBasic = socketManager.socket('/');\nlet socketMain = socketManager.socket(socketUrl.urlMain);\nexport const connectBasicSocket = token => {\n  var _socketBasic;\n\n  if ((_socketBasic = socketBasic) !== null && _socketBasic !== void 0 && _socketBasic.connected) return;\n  socketBasic = io.connect(socketUrl.url, {\n    transports: ['websocket'],\n    autoConnect: true,\n    forceNew: true,\n    query: `${token}siousiou`\n  });\n  socketBasic.on('connect', data => {\n    console.log('connect data => ', data);\n  });\n};\nexport const disconnectSocket = () => {\n  var _socketBasic2;\n\n  if (!socketBasic) return;\n  (_socketBasic2 = socketBasic) === null || _socketBasic2 === void 0 ? void 0 : _socketBasic2.disconnect();\n};\nexport const connectMainSocket = async token => {\n  console.log(\"it is main socket\");\n  socketMain = io.connect(socketUrl.url + socketUrl.urlMain, {\n    transports: ['websocket'],\n    autoConnect: true,\n    forceNew: true,\n    query: `${token}siousiou`\n  });\n  socketMain.on('DataBaseChange', data => {\n    console.log('hihi data => ', data);\n  });\n};","map":{"version":3,"sources":["/Users/siou/Downloads/code/performance/frontend_dev/src/page/socketIo.js"],"names":["io","Manager","ip","socketUrl","url","urlMain","socketManager","socketBasic","socket","socketMain","connectBasicSocket","token","connected","connect","transports","autoConnect","forceNew","query","on","data","console","log","disconnectSocket","disconnect","connectMainSocket"],"mappings":"AAAA,SAAQA,EAAR,EAAWC,OAAX,QAAyB,kBAAzB;AACA,SAAQC,EAAR,QAAiB,WAAjB;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAG,UAASF,EAAG,OADJ;AAEdG,EAAAA,OAAO,EAAE;AAFK,CAAlB;AAIA,IAAIC,aAAa,GAAI,IAAIL,OAAJ,CAAYE,SAAS,CAACC,GAAtB,CAArB;AACA,IAAIG,WAAW,GAAGD,aAAa,CAACE,MAAd,CAAqB,GAArB,CAAlB;AACA,IAAIC,UAAU,GAAGH,aAAa,CAACE,MAAd,CAAqBL,SAAS,CAACE,OAA/B,CAAjB;AACA,OAAO,MAAMK,kBAAkB,GAAIC,KAAD,IAAW;AAAA;;AACzC,sBAAIJ,WAAJ,yCAAI,aAAaK,SAAjB,EAA4B;AAE5BL,EAAAA,WAAW,GAAGP,EAAE,CAACa,OAAH,CAAWV,SAAS,CAACC,GAArB,EAA0B;AACpCU,IAAAA,UAAU,EAAE,CAAC,WAAD,CADwB;AAEpCC,IAAAA,WAAW,EAAE,IAFuB;AAGpCC,IAAAA,QAAQ,EAAE,IAH0B;AAIpCC,IAAAA,KAAK,EAAG,GAAEN,KAAM;AAJoB,GAA1B,CAAd;AAOAJ,EAAAA,WAAW,CAACW,EAAZ,CAAe,SAAf,EAA2BC,IAAD,IAAU;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,IAA/B;AACH,GAFD;AAGH,CAbM;AAeP,OAAO,MAAMG,gBAAgB,GAAG,MAAM;AAAA;;AAClC,MAAI,CAACf,WAAL,EAAkB;AAClB,mBAAAA,WAAW,UAAX,sDAAagB,UAAb;AACH,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAE,MAAOb,KAAP,IAAiB;AAC7CS,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAZ,EAAAA,UAAU,GAAGT,EAAE,CAACa,OAAH,CAAWV,SAAS,CAACC,GAAV,GAAgBD,SAAS,CAACE,OAArC,EAA8C;AACvDS,IAAAA,UAAU,EAAE,CAAC,WAAD,CAD2C;AAEvDC,IAAAA,WAAW,EAAE,IAF0C;AAGvDC,IAAAA,QAAQ,EAAE,IAH6C;AAIvDC,IAAAA,KAAK,EAAG,GAAEN,KAAM;AAJuC,GAA9C,CAAb;AAOAF,EAAAA,UAAU,CAACS,EAAX,CAAc,gBAAd,EAAiCC,IAAD,IAAU;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACH,GAFD;AAGH,CAZM","sourcesContent":["import {io,Manager} from 'socket.io-client';\nimport {ip} from '../config';\nconst socketUrl = {\n    url: `http://${ip}:5002`,\n    urlMain: '/main',\n}\nlet socketManager =  new Manager(socketUrl.url)\nlet socketBasic = socketManager.socket('/');\nlet socketMain = socketManager.socket(socketUrl.urlMain);\nexport const connectBasicSocket = (token) => {\n    if (socketBasic?.connected) return;\n\n    socketBasic = io.connect(socketUrl.url, {\n        transports: ['websocket'],\n        autoConnect: true,\n        forceNew: true,\n        query: `${token}siousiou`,\n    });\n\n    socketBasic.on('connect', (data) => {\n        console.log('connect data => ',data)\n    });\n}\n\nexport const disconnectSocket = () => {\n    if (!socketBasic) return;\n    socketBasic?.disconnect();\n};\n\nexport const connectMainSocket =async (token) => {\n    console.log(\"it is main socket\")\n    socketMain = io.connect(socketUrl.url + socketUrl.urlMain, {\n        transports: ['websocket'],\n        autoConnect: true,\n        forceNew: true,\n        query: `${token}siousiou`,\n    });\n\n    socketMain.on('DataBaseChange', (data) => {\n        console.log('hihi data => ', data)\n    });\n}"]},"metadata":{},"sourceType":"module"}