{"ast":null,"code":"import { banch_index, backend, year_performance } from \"../api\";\nexport async function check_and_recatch_data(token, synchronize_update, sec) {\n  //負責設定同步畫面及同步抓取資料\n  var result1 = await banch_index(token);\n  var result2 = await backend(token);\n  var result3 = await year_performance(token);\n  synchronize_update(true); //設定同步頁面開始\n\n  setTimeout(() => {\n    if (result1 === true && result2 === true && result3 === true) {\n      //代表資料已經更新\n      synchronize_update(false); //設定同步頁面結束\n\n      return true;\n    }\n\n    return false;\n  }, sec);\n}\n;\nexport function rule_id(value) {\n  //value =>e.target.value\n  var type = typeof value;\n  var ascii;\n  var temp = [];\n\n  for (let num = 0; num < value.length; num++) {\n    ascii = value.codePointAt(num);\n\n    if (ascii >= 48 && ascii <= 57 || ascii >= 65 && ascii <= 90 || ascii >= 97 && ascii <= 122) {} else {\n      temp.push(num);\n    }\n  }\n\n  if (temp.length > 1) {\n    console.log();\n    alert('檢測到非法字元', temp.join());\n  }\n\n  if (type === 'string') {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/Users/admin/Downloads/code/dajia/frontend/src/page/method/method_func.js"],"names":["banch_index","backend","year_performance","check_and_recatch_data","token","synchronize_update","sec","result1","result2","result3","setTimeout","rule_id","value","type","ascii","temp","num","length","codePointAt","push","console","log","alert","join"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,OAArB,EAA6BC,gBAA7B,QAAqD,QAArD;AACA,OAAO,eAAeC,sBAAf,CAAsCC,KAAtC,EAA4CC,kBAA5C,EAA+DC,GAA/D,EAAmE;AACtE;AACA,MAAIC,OAAO,GAAC,MAAMP,WAAW,CAACI,KAAD,CAA7B;AACA,MAAII,OAAO,GAAC,MAAMP,OAAO,CAACG,KAAD,CAAzB;AACA,MAAIK,OAAO,GAAC,MAAMP,gBAAgB,CAACE,KAAD,CAAlC;AACAC,EAAAA,kBAAkB,CAAC,IAAD,CAAlB,CALsE,CAK9C;;AACxBK,EAAAA,UAAU,CAAC,MAAM;AACb,QAAGH,OAAO,KAAG,IAAV,IAAgBC,OAAO,KAAG,IAA1B,IAAgCC,OAAO,KAAG,IAA7C,EAAkD;AAC1C;AACJJ,MAAAA,kBAAkB,CAAC,KAAD,CAAlB,CAF8C,CAErB;;AACzB,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GAPS,EAOPC,GAPO,CAAV;AAQH;AAAA;AAED,OAAO,SAASK,OAAT,CAAiBC,KAAjB,EAAuB;AAC1B;AACA,MAAIC,IAAI,GAAC,OAAOD,KAAhB;AACA,MAAIE,KAAJ;AACA,MAAIC,IAAI,GAAC,EAAT;;AACA,OAAI,IAAIC,GAAG,GAAC,CAAZ,EAAcA,GAAG,GAACJ,KAAK,CAACK,MAAxB,EAA+BD,GAAG,EAAlC,EAAqC;AACjCF,IAAAA,KAAK,GAACF,KAAK,CAACM,WAAN,CAAkBF,GAAlB,CAAN;;AACA,QAAIF,KAAK,IAAE,EAAP,IAAWA,KAAK,IAAE,EAAnB,IAAyBA,KAAK,IAAE,EAAP,IAAWA,KAAK,IAAE,EAA3C,IAAiDA,KAAK,IAAE,EAAP,IAAWA,KAAK,IAAE,GAAtE,EAA2E,CAE1E,CAFD,MAGI;AACAC,MAAAA,IAAI,CAACI,IAAL,CAAUH,GAAV;AAEH;AACJ;;AACD,MAAGD,IAAI,CAACE,MAAL,GAAY,CAAf,EAAiB;AACbG,IAAAA,OAAO,CAACC,GAAR;AACAC,IAAAA,KAAK,CAAC,SAAD,EAAWP,IAAI,CAACQ,IAAL,EAAX,CAAL;AACH;;AACD,MAAGV,IAAI,KAAG,QAAV,EAAmB;AAEf,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH","sourcesContent":["import { banch_index,backend,year_performance } from \"../api\"\nexport async function check_and_recatch_data(token,synchronize_update,sec){\n    //負責設定同步畫面及同步抓取資料\n    var result1=await banch_index(token)\n    var result2=await backend(token)\n    var result3=await year_performance(token)\n    synchronize_update(true)//設定同步頁面開始\n    setTimeout(() => {\n        if(result1===true&&result2===true&&result3===true){\n                //代表資料已經更新\n            synchronize_update(false)//設定同步頁面結束\n            return true\n        }\n        return false\n    }, sec);\n};\n\nexport function rule_id(value){\n    //value =>e.target.value\n    var type=typeof(value)\n    var ascii\n    var temp=[]\n    for(let num=0;num<value.length;num++){\n        ascii=value.codePointAt(num)\n        if((ascii>=48&&ascii<=57)||(ascii>=65&&ascii<=90)||(ascii>=97&&ascii<=122)){\n            \n        }\n        else{\n            temp.push(num)\n            \n        }\n    }\n    if(temp.length>1){\n        console.log()\n        alert('檢測到非法字元',temp.join())\n    }\n    if(type==='string'){\n        \n        return true\n    }\n    return false\n}"]},"metadata":{},"sourceType":"module"}