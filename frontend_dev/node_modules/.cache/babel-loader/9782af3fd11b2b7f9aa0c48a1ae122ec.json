{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Downloads/code/dajia/frontend/src/page/backend_component/new_performance.js\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport { Return_component } from \"./data_input\";\nimport { Loading } from \"./loading\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst New_performance = _ref => {\n  _s();\n\n  let {\n    data,\n    synchronize_update,\n    synchronize\n  } = _ref;\n  const {\n    page\n  } = useParams();\n  const [confirm_data, set_confirm_data] = useState([]);\n  const [page_data_arr, set_page_data_arr] = useState([]);\n  const year = ['請選擇年份'];\n  var Today = new Date();\n\n  for (let i = 0; i < 3; i++) {\n    year.push(Today.getFullYear() - 1911 + i);\n  }\n\n  useEffect(() => {\n    if (data.length !== 0) {\n      set_page_data_arr(data);\n      var arr = data.map(item => {\n        return [item[0], 0, 'yes']; //account,year,(yes or no)\n        //yes =>this people need to insert\n      });\n      set_confirm_data(arr);\n    } else {\n      set_page_data_arr([]);\n    }\n  }, [page, data]);\n\n  function insert() {//send api to insert performance table\n    //api(confirm_data)\n  }\n\n  if (!page_data_arr || synchronize === true) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      children: year.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          children: index !== 0 ? `民國${item}` : item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 36\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), page_data_arr.length !== 0 ? /*#__PURE__*/_jsxDEV(Return_component, {\n      synchronize_update: synchronize_update,\n      number: 5,\n      page: page,\n      confirm_data: confirm_data,\n      set_confirm_data: set_confirm_data,\n      arr_params: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 100000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        name: \"create\",\n        onClick: insert,\n        children: \"\\u78BA\\u8A8D\\u65B0\\u589E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(New_performance, \"WIuktjfcscIG/M19RUkWsSztVnI=\", false, function () {\n  return [useParams];\n});\n\n_c = New_performance;\nexport default New_performance;\n\nvar _c;\n\n$RefreshReg$(_c, \"New_performance\");","map":{"version":3,"sources":["/Users/admin/Downloads/code/dajia/frontend/src/page/backend_component/new_performance.js"],"names":["useParams","Return_component","Loading","useState","useEffect","New_performance","data","synchronize_update","synchronize","page","confirm_data","set_confirm_data","page_data_arr","set_page_data_arr","year","Today","Date","i","push","getFullYear","length","arr","map","item","insert","index","display","alignItems","justifyContent","zIndex"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { Return_component } from \"./data_input\"\nimport { Loading } from \"./loading\"\nimport { useState,useEffect } from \"react\"\nconst New_performance=({data,synchronize_update,synchronize})=>{\n    const {page}=useParams()\n\n    const [confirm_data,set_confirm_data]=useState([])\n    const [page_data_arr,set_page_data_arr]=useState([])\n\n    const year=['請選擇年份']\n    var Today=new Date();\n    for(let i=0;i<3;i++){\n        year.push(Today.getFullYear()-1911+i)\n    }\n    useEffect(()=>{\n        if(data.length!==0){\n            set_page_data_arr(data)\n            var arr=data.map((item)=>{\n                return([item[0],0,'yes'])//account,year,(yes or no)\n                //yes =>this people need to insert\n            })\n            set_confirm_data(arr)\n        }\n        else{\n            set_page_data_arr([])\n        }\n    },[page,data])\n\n    function insert(){\n        //send api to insert performance table\n        //api(confirm_data)\n        \n\n    }\n\n    if(!page_data_arr||synchronize===true){\n        return(<Loading/>)\n    }\n    return(\n<>\n                <select>\n                    {\n                        year.map((item,index)=>{\n                            return(<option key={index}>{index!==0?`民國${item}`:item}</option>)\n                        })\n                    }\n                </select>\n            {\n                page_data_arr.length!==0\n                ?<Return_component \n                    synchronize_update={synchronize_update}\n                    number={5}\n                    page={page}\n                    confirm_data={confirm_data}\n                    set_confirm_data={set_confirm_data}\n                    arr_params={data}/>\n                :<></>\n            }\n            <div style={{display:'flex',alignItems:'center',justifyContent:'center',zIndex:100000}}>\n                <button name=\"create\" \n                    onClick={insert}>確認新增</button>\n            </div>\n</>\n    )\n}\nexport default New_performance;"]},"metadata":{},"sourceType":"module"}