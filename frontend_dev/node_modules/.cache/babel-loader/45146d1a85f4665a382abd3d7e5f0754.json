{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/Users/siou/Downloads/code/performance/frontend_dev/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/Users/siou/Downloads/code/performance/frontend_dev/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nimport { Manager } from 'socket.io-client';\nimport { socketEvent } from '../config';\nimport session from './method/storage';\nimport { socketUrl, socketNameSpace } from '../config';\n\nvar _basicOnListen = /*#__PURE__*/_classPrivateFieldLooseKey(\"_basicOnListen\");\n\nvar _mainOnListen = /*#__PURE__*/_classPrivateFieldLooseKey(\"_mainOnListen\");\n\nvar _emitBasicEvent = /*#__PURE__*/_classPrivateFieldLooseKey(\"_emitBasicEvent\");\n\nvar _emitMainEvent = /*#__PURE__*/_classPrivateFieldLooseKey(\"_emitMainEvent\");\n\nexport default class SocketIO extends Manager {\n  constructor() {\n    super(socketUrl.url, {\n      transports: ['websocket'],\n      autoConnect: true,\n      forceNew: true,\n      query: `${session.getItem('token')}siousiou`\n    });\n  }\n\n  static async action() {\n    let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let nameSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '/';\n\n    if (!SocketIO.instance) {\n      SocketIO.instance = new SocketIO();\n    }\n\n    _classPrivateFieldLooseBase(this, _basicOnListen)[_basicOnListen](SocketIO.instance);\n\n    if (event) {\n      if (nameSpace === socketNameSpace.basic) {\n        _classPrivateFieldLooseBase(this, _emitBasicEvent)[_emitBasicEvent](SocketIO.instance, event, params);\n      } else if (nameSpace === socketNameSpace.main) {\n        _classPrivateFieldLooseBase(this, _emitMainEvent)[_emitMainEvent](SocketIO.instance, event, params);\n      }\n    }\n\n    return await SocketIO.instance;\n  }\n\n}\n\nfunction _basicOnListen2(instance) {\n  instance.socket(socketNameSpace.basic).on(socketEvent.connect, () => {\n    console.log('socket io is connected');\n  });\n  instance.socket(socketNameSpace.basic).on(socketEvent.disconnect, () => {\n    console.log('has already been disconnected');\n  });\n}\n\nfunction _mainOnListen2(instance) {\n  instance.socket(socketNameSpace.main).on(socketEvent.DataBaseChange, () => {\n    console.log('mainOnListen =>');\n  });\n}\n\nfunction _emitBasicEvent2(instance, event, params) {\n  instance.socket(socketNameSpace.basic).emit(event, params);\n}\n\nfunction _emitMainEvent2(instance, event, params) {\n  instance.socket(socketNameSpace.main).emit(event, params);\n}\n\nObject.defineProperty(SocketIO, _emitMainEvent, {\n  value: _emitMainEvent2\n});\nObject.defineProperty(SocketIO, _emitBasicEvent, {\n  value: _emitBasicEvent2\n});\nObject.defineProperty(SocketIO, _mainOnListen, {\n  value: _mainOnListen2\n});\nObject.defineProperty(SocketIO, _basicOnListen, {\n  value: _basicOnListen2\n});","map":{"version":3,"sources":["/Users/siou/Downloads/code/performance/frontend_dev/src/page/socketIo.js"],"names":["Manager","socketEvent","session","socketUrl","socketNameSpace","SocketIO","constructor","url","transports","autoConnect","forceNew","query","getItem","action","event","params","nameSpace","instance","basic","main","socket","on","connect","console","log","disconnect","DataBaseChange","emit"],"mappings":";;AAAA,SAAQA,OAAR,QAAsB,kBAAtB;AACA,SAAQC,WAAR,QAA0B,WAA1B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,WAA3C;;;;;;;;;;AAEA,eAAe,MAAMC,QAAN,SAAuBL,OAAvB,CAA8B;AACzCM,EAAAA,WAAW,GAAG;AACV,UAAMH,SAAS,CAACI,GAAhB,EAAoB;AAChBC,MAAAA,UAAU,EAAE,CAAC,WAAD,CADI;AAEhBC,MAAAA,WAAW,EAAE,IAFG;AAGhBC,MAAAA,QAAQ,EAAE,IAHM;AAIhBC,MAAAA,KAAK,EAAG,GAAET,OAAO,CAACU,OAAR,CAAgB,OAAhB,CAAyB;AAJnB,KAApB;AAMH;;AAEkB,eAANC,MAAM,GAA+C;AAAA,QAA9CC,KAA8C,uEAAtC,IAAsC;AAAA,QAAhCC,MAAgC,uEAAvB,IAAuB;AAAA,QAAjBC,SAAiB,uEAAL,GAAK;;AAC9D,QAAI,CAACX,QAAQ,CAACY,QAAd,EAAwB;AACpBZ,MAAAA,QAAQ,CAACY,QAAT,GAAoB,IAAIZ,QAAJ,EAApB;AACH;;AACD,sEAAqBA,QAAQ,CAACY,QAA9B;;AACA,QAAIH,KAAJ,EAAW;AACP,UAAIE,SAAS,KAAKZ,eAAe,CAACc,KAAlC,EAAyC;AACrC,4EAAsBb,QAAQ,CAACY,QAA/B,EAAyCH,KAAzC,EAAgDC,MAAhD;AACH,OAFD,MAGK,IAAGC,SAAS,KAAKZ,eAAe,CAACe,IAAjC,EAAsC;AACvC,0EAAqBd,QAAQ,CAACY,QAA9B,EAAwCH,KAAxC,EAA+CC,MAA/C;AACH;AACJ;;AACD,WAAO,MAAMV,QAAQ,CAACY,QAAtB;AACH;;AAxBwC;;yBA0BlBA,Q,EAAU;AAC7BA,EAAAA,QAAQ,CAACG,MAAT,CAAgBhB,eAAe,CAACc,KAAhC,EAAuCG,EAAvC,CAA0CpB,WAAW,CAACqB,OAAtD,EAA+D,MAAM;AACjEC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,GAFD;AAGAP,EAAAA,QAAQ,CAACG,MAAT,CAAgBhB,eAAe,CAACc,KAAhC,EAAuCG,EAAvC,CAA0CpB,WAAW,CAACwB,UAAtD,EAAkE,MAAM;AACpEF,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACH,GAFD;AAGH;;wBAEqBP,Q,EAAU;AAC5BA,EAAAA,QAAQ,CAACG,MAAT,CAAgBhB,eAAe,CAACe,IAAhC,EAAsCE,EAAtC,CAAyCpB,WAAW,CAACyB,cAArD,EAAqE,MAAM;AACvEH,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACH,GAFD;AAGH;;0BAEuBP,Q,EAAUH,K,EAAOC,M,EAAQ;AAC7CE,EAAAA,QAAQ,CAACG,MAAT,CAAgBhB,eAAe,CAACc,KAAhC,EAAuCS,IAAvC,CAA4Cb,KAA5C,EAAmDC,MAAnD;AACH;;yBAEsBE,Q,EAAUH,K,EAAOC,M,EAAQ;AAC5CE,EAAAA,QAAQ,CAACG,MAAT,CAAgBhB,eAAe,CAACe,IAAhC,EAAsCQ,IAAtC,CAA2Cb,KAA3C,EAAkDC,MAAlD;AACH;;sBA/CgBV,Q;;;sBAAAA,Q;;;sBAAAA,Q;;;sBAAAA,Q","sourcesContent":["import {Manager} from 'socket.io-client';\nimport {socketEvent} from '../config';\nimport session from './method/storage';\nimport { socketUrl, socketNameSpace } from '../config';\n\nexport default class SocketIO extends Manager{\n    constructor() {\n        super(socketUrl.url,{\n            transports: ['websocket'],\n            autoConnect: true,\n            forceNew: true,\n            query: `${session.getItem('token')}siousiou`,\n        })\n    }\n\n    static async action(event = null, params = null, nameSpace = '/') {\n        if (!SocketIO.instance) {\n            SocketIO.instance = new SocketIO()\n        }\n        this.#_basicOnListen(SocketIO.instance)\n        if (event) {\n            if (nameSpace === socketNameSpace.basic) {\n                this.#_emitBasicEvent(SocketIO.instance, event, params)\n            }\n            else if(nameSpace === socketNameSpace.main){\n                this.#_emitMainEvent(SocketIO.instance, event, params)\n            }\n        }\n        return await SocketIO.instance;\n    }\n\n    static #_basicOnListen(instance) {\n        instance.socket(socketNameSpace.basic).on(socketEvent.connect, () => {\n            console.log('socket io is connected')\n        });\n        instance.socket(socketNameSpace.basic).on(socketEvent.disconnect, () => {\n            console.log('has already been disconnected')\n        })\n    }\n\n    static #_mainOnListen(instance) {\n        instance.socket(socketNameSpace.main).on(socketEvent.DataBaseChange, () => {\n            console.log('mainOnListen =>',)\n        })\n    }\n\n    static #_emitBasicEvent(instance, event, params) {\n        instance.socket(socketNameSpace.basic).emit(event, params);\n    }\n    \n    static #_emitMainEvent(instance, event, params) {\n        instance.socket(socketNameSpace.main).emit(event, params);\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}