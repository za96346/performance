{"ast":null,"code":"import { socketUrl } from './api';\nimport io from 'socket.io-client';\nlet socket;\nexport const connectSocket = token => {\n  var _socket;\n\n  if ((_socket = socket) !== null && _socket !== void 0 && _socket.connected) return;\n  socket = io.connect(socketUrl.url, {\n    transports: ['websocket'],\n    autoConnect: true,\n    forceNew: true,\n    query: `${token}siousiou`\n  });\n  socket.on('connect', data => {\n    console.log('connect data => ', data);\n  });\n  socket.of('main').on('DataBaseChange', data => {\n    console.log('hihi data => ', data);\n  });\n  socket.emit(\"DataBaseChange\", {});\n};","map":{"version":3,"sources":["/Users/siou/Downloads/code/performance/frontend_dev/src/page/socketIo.js"],"names":["socketUrl","io","socket","connectSocket","token","connected","connect","url","transports","autoConnect","forceNew","query","on","data","console","log","of","emit"],"mappings":"AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;AACA,OAAO,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACpC,iBAAIF,MAAJ,oCAAI,QAAQG,SAAZ,EAAuB;AAEvBH,EAAAA,MAAM,GAAGD,EAAE,CAACK,OAAH,CAAWN,SAAS,CAACO,GAArB,EAA0B;AAC/BC,IAAAA,UAAU,EAAE,CAAC,WAAD,CADmB;AAE/BC,IAAAA,WAAW,EAAE,IAFkB;AAG/BC,IAAAA,QAAQ,EAAE,IAHqB;AAI/BC,IAAAA,KAAK,EAAG,GAAEP,KAAM;AAJe,GAA1B,CAAT;AAQAF,EAAAA,MAAM,CAACU,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BF,IAA/B;AACH,GAFD;AAIAX,EAAAA,MAAM,CAACc,EAAP,CAAU,MAAV,EAAkBJ,EAAlB,CAAqB,gBAArB,EAAwCC,IAAD,IAAU;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACH,GAFD;AAGAX,EAAAA,MAAM,CAACe,IAAP,CAAY,gBAAZ,EAA6B,EAA7B;AACH,CAnBM","sourcesContent":["\nimport { socketUrl } from './api';\nimport io from 'socket.io-client';\n\nlet socket;\nexport const connectSocket = (token) => {\n    if (socket?.connected) return;\n\n    socket = io.connect(socketUrl.url, {\n        transports: ['websocket'],\n        autoConnect: true,\n        forceNew: true,\n        query: `${token}siousiou`,\n    });\n    \n\n    socket.on('connect', (data) => {\n        console.log('connect data => ',data)\n    });\n\n    socket.of('main').on('DataBaseChange', (data) => {\n        console.log('hihi data => ', data)\n    });\n    socket.emit(\"DataBaseChange\",{})\n}"]},"metadata":{},"sourceType":"module"}