{"ast":null,"code":"import { io, Manager } from 'socket.io-client';\nimport { ip } from '../config';\nconst socketUrl = {\n  url: `http://${ip}:5002`,\n  urlMain: '/main'\n}; // let socketManager = (token) =>( new Manager(socketUrl.url,{\n//     transports: ['websocket'],\n//     autoConnect: true,\n//     forceNew: true,\n//     query: `${token}siousiou`,\n// }))\n// let socketBasic = (token) => socketManager(token).socket('/');\n// let socketMain = (token) => socketManager(token).socket(socketUrl.urlMain);\n// export const connectBasicSocket = (token) => {\n//     if (socketBasic(token)?.connected) return;\n//     // socketBasic = io.connect(socketUrl.url, {\n//     //     transports: ['websocket'],\n//     //     autoConnect: true,\n//     //     forceNew: true,\n//     //     query: `${token}siousiou`,\n//     // });\n//     socketBasic(token).on('connect', (data) => {\n//         console.log('connect data => ',data)\n//     });\n// }\n// export const disconnectSocket = (token) => {\n//     if (!socketBasic(token)) return;\n//     socketBasic(token).disconnect()\n// };\n// export const connectMainSocket =async (token) => {\n//     console.log(\"it is main socket\",socketMain(token))\n//     // socketMain = io.connect(socketUrl.url + socketUrl.urlMain, {\n//     //     transports: ['websocket'],\n//     //     autoConnect: true,\n//     //     forceNew: true,\n//     //     query: `${token}siousiou`,\n//     // });\n//     socketMain(token).on('DataBaseChange', (data) => {\n//         console.log('DataBaseChange => ', data)\n//     });\n//     socketMain(token).emit(\"DataBaseChange\", {})\n// }\n\nexport default class socket extends Manager {\n  constructor(token) {\n    super(socketUrl.url, {\n      transports: ['websocket'],\n      autoConnect: true,\n      forceNew: true,\n      query: `${token}siousiou`\n    });\n    this.token = token;\n  }\n\n  static getInstance(token) {\n    if (!socket.instance) {\n      return new socket(token);\n    }\n\n    return socket.instance;\n  }\n\n}","map":{"version":3,"sources":["/Users/siou/Downloads/code/performance/frontend_dev/src/page/socketIo.js"],"names":["io","Manager","ip","socketUrl","url","urlMain","socket","constructor","token","transports","autoConnect","forceNew","query","getInstance","instance"],"mappings":"AAAA,SAAQA,EAAR,EAAWC,OAAX,QAAyB,kBAAzB;AACA,SAAQC,EAAR,QAAiB,WAAjB;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAG,UAASF,EAAG,OADJ;AAEdG,EAAAA,OAAO,EAAE;AAFK,CAAlB,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,MAAN,SAAqBL,OAArB,CAA4B;AACvCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAML,SAAS,CAACC,GAAhB,EAAoB;AAChBK,MAAAA,UAAU,EAAE,CAAC,WAAD,CADI;AAEhBC,MAAAA,WAAW,EAAE,IAFG;AAGhBC,MAAAA,QAAQ,EAAE,IAHM;AAIhBC,MAAAA,KAAK,EAAG,GAAEJ,KAAM;AAJA,KAApB;AAMA,SAAKA,KAAL,GAAaA,KAAb;AACH;;AAEiB,SAAXK,WAAW,CAACL,KAAD,EAAQ;AACtB,QAAI,CAACF,MAAM,CAACQ,QAAZ,EAAsB;AAClB,aAAO,IAAIR,MAAJ,CAAWE,KAAX,CAAP;AACH;;AACD,WAAOF,MAAM,CAACQ,QAAd;AACH;;AAhBsC","sourcesContent":["import {io,Manager} from 'socket.io-client';\nimport {ip} from '../config';\nconst socketUrl = {\n    url: `http://${ip}:5002`,\n    urlMain: '/main',\n}\n// let socketManager = (token) =>( new Manager(socketUrl.url,{\n//     transports: ['websocket'],\n//     autoConnect: true,\n//     forceNew: true,\n//     query: `${token}siousiou`,\n// }))\n// let socketBasic = (token) => socketManager(token).socket('/');\n// let socketMain = (token) => socketManager(token).socket(socketUrl.urlMain);\n\n// export const connectBasicSocket = (token) => {\n//     if (socketBasic(token)?.connected) return;\n\n//     // socketBasic = io.connect(socketUrl.url, {\n//     //     transports: ['websocket'],\n//     //     autoConnect: true,\n//     //     forceNew: true,\n//     //     query: `${token}siousiou`,\n//     // });\n\n//     socketBasic(token).on('connect', (data) => {\n//         console.log('connect data => ',data)\n//     });\n// }\n\n// export const disconnectSocket = (token) => {\n//     if (!socketBasic(token)) return;\n//     socketBasic(token).disconnect()\n// };\n\n// export const connectMainSocket =async (token) => {\n//     console.log(\"it is main socket\",socketMain(token))\n    \n//     // socketMain = io.connect(socketUrl.url + socketUrl.urlMain, {\n//     //     transports: ['websocket'],\n//     //     autoConnect: true,\n//     //     forceNew: true,\n//     //     query: `${token}siousiou`,\n//     // });\n\n//     socketMain(token).on('DataBaseChange', (data) => {\n//         console.log('DataBaseChange => ', data)\n//     });\n//     socketMain(token).emit(\"DataBaseChange\", {})\n// }\nexport default class socket extends Manager{\n    constructor(token) {\n        super(socketUrl.url,{\n            transports: ['websocket'],\n            autoConnect: true,\n            forceNew: true,\n            query: `${token}siousiou`,\n        })\n        this.token = token;\n    }\n\n    static getInstance(token) {\n        if (!socket.instance) {\n            return new socket(token)\n        }\n        return socket.instance;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}