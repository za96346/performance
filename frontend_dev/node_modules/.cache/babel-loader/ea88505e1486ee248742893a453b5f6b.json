{"ast":null,"code":"import _classPrivateFieldLooseBase from \"/Users/siou/Downloads/code/performance/frontend_dev/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"/Users/siou/Downloads/code/performance/frontend_dev/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nimport { io, Manager } from 'socket.io-client';\nimport { ip } from '../config';\nimport session from './method/storage';\nconst socketUrl = {\n  url: `http://${ip}:5002`,\n  urlMain: '/main'\n};\nconst socketNameSpace = {\n  basic: '/',\n  main: '/main'\n};\n\nvar _connection = /*#__PURE__*/_classPrivateFieldLooseKey(\"_connection\");\n\nvar _disconnection = /*#__PURE__*/_classPrivateFieldLooseKey(\"_disconnection\");\n\nvar _emitBasicEvent = /*#__PURE__*/_classPrivateFieldLooseKey(\"_emitBasicEvent\");\n\nvar _emitMainEvent = /*#__PURE__*/_classPrivateFieldLooseKey(\"_emitMainEvent\");\n\nexport default class SocketIO extends Manager {\n  constructor() {\n    super(socketUrl.url, {\n      transports: ['websocket'],\n      autoConnect: true,\n      forceNew: true,\n      query: `${session.getItem('token')}siousiou`\n    });\n  }\n\n  static async getInstance() {\n    let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let nameSpace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '/';\n\n    if (!SocketIO.instance) {\n      SocketIO.instance = new SocketIO();\n    }\n\n    _classPrivateFieldLooseBase(this, _connection)[_connection](SocketIO.instance);\n\n    _classPrivateFieldLooseBase(this, _disconnection)[_disconnection](SocketIO.instance);\n\n    if (event) {\n      if (nameSpace === '/') {\n        _classPrivateFieldLooseBase(this, _emitBasicEvent)[_emitBasicEvent](SocketIO.instance, event, params);\n      } else if (nameSpace === '/main') {\n        _classPrivateFieldLooseBase(this, _emitMainEvent)[_emitMainEvent](SocketIO.instance, event, params);\n      }\n    }\n\n    return await SocketIO.instance;\n  }\n\n}\n\nfunction _connection2(instance) {\n  instance.socket('/').on('connect', () => {\n    console.log('socket io is connected');\n  });\n}\n\nfunction _disconnection2(instance) {\n  instance.socket('/').on('disconnect', () => {\n    console.log('has already been disconnected');\n  });\n}\n\nfunction _emitBasicEvent2(instance, event, params) {\n  instance.socket('/').emit(event, params);\n}\n\nfunction _emitMainEvent2(instance, event, params) {\n  instance.socket('/main').emit(event, params);\n}\n\nObject.defineProperty(SocketIO, _emitMainEvent, {\n  value: _emitMainEvent2\n});\nObject.defineProperty(SocketIO, _emitBasicEvent, {\n  value: _emitBasicEvent2\n});\nObject.defineProperty(SocketIO, _disconnection, {\n  value: _disconnection2\n});\nObject.defineProperty(SocketIO, _connection, {\n  value: _connection2\n});","map":{"version":3,"sources":["/Users/siou/Downloads/code/performance/frontend_dev/src/page/socketIo.js"],"names":["io","Manager","ip","session","socketUrl","url","urlMain","socketNameSpace","basic","main","SocketIO","constructor","transports","autoConnect","forceNew","query","getItem","getInstance","event","params","nameSpace","instance","socket","on","console","log","emit"],"mappings":";;AAAA,SAAQA,EAAR,EAAWC,OAAX,QAAyB,kBAAzB;AACA,SAAQC,EAAR,QAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,GAAG,EAAG,UAASH,EAAG,OADJ;AAEdI,EAAAA,OAAO,EAAE;AAFK,CAAlB;AAIA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE,GADa;AAEpBC,EAAAA,IAAI,EAAC;AAFe,CAAxB;;;;;;;;;;AAKA,eAAe,MAAMC,QAAN,SAAuBT,OAAvB,CAA8B;AACzCU,EAAAA,WAAW,GAAG;AACV,UAAMP,SAAS,CAACC,GAAhB,EAAoB;AAChBO,MAAAA,UAAU,EAAE,CAAC,WAAD,CADI;AAEhBC,MAAAA,WAAW,EAAE,IAFG;AAGhBC,MAAAA,QAAQ,EAAE,IAHM;AAIhBC,MAAAA,KAAK,EAAG,GAAEZ,OAAO,CAACa,OAAR,CAAgB,OAAhB,CAAyB;AAJnB,KAApB;AAMH;;AAEuB,eAAXC,WAAW,GAA+C;AAAA,QAA9CC,KAA8C,uEAAtC,IAAsC;AAAA,QAAhCC,MAAgC,uEAAvB,IAAuB;AAAA,QAAjBC,SAAiB,uEAAL,GAAK;;AACnE,QAAI,CAACV,QAAQ,CAACW,QAAd,EAAwB;AACpBX,MAAAA,QAAQ,CAACW,QAAT,GAAoB,IAAIX,QAAJ,EAApB;AACH;;AACD,gEAAkBA,QAAQ,CAACW,QAA3B;;AACA,sEAAqBX,QAAQ,CAACW,QAA9B;;AACA,QAAIH,KAAJ,EAAW;AACP,UAAIE,SAAS,KAAK,GAAlB,EAAuB;AACnB,4EAAsBV,QAAQ,CAACW,QAA/B,EAAyCH,KAAzC,EAAgDC,MAAhD;AACH,OAFD,MAGK,IAAGC,SAAS,KAAK,OAAjB,EAAyB;AAC1B,0EAAqBV,QAAQ,CAACW,QAA9B,EAAwCH,KAAxC,EAA+CC,MAA/C;AACH;AACJ;;AACD,WAAO,MAAMT,QAAQ,CAACW,QAAtB;AACH;;AAzBwC;;sBA2BrBA,Q,EAAU;AAC1BA,EAAAA,QAAQ,CAACC,MAAT,CAAgB,GAAhB,EAAqBC,EAArB,CAAwB,SAAxB,EAAmC,MAAM;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACH,GAFD;AAGH;;yBAEsBJ,Q,EAAU;AAC7BA,EAAAA,QAAQ,CAACC,MAAT,CAAgB,GAAhB,EAAqBC,EAArB,CAAwB,YAAxB,EAAsC,MAAM;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACH,GAFD;AAGH;;0BAEuBJ,Q,EAAUH,K,EAAOC,M,EAAQ;AAC7CE,EAAAA,QAAQ,CAACC,MAAT,CAAgB,GAAhB,EAAqBI,IAArB,CAA0BR,KAA1B,EAAiCC,MAAjC;AACH;;yBAEsBE,Q,EAAUH,K,EAAOC,M,EAAQ;AAC5CE,EAAAA,QAAQ,CAACC,MAAT,CAAgB,OAAhB,EAAyBI,IAAzB,CAA8BR,KAA9B,EAAqCC,MAArC;AACH;;sBA7CgBT,Q;;;sBAAAA,Q;;;sBAAAA,Q;;;sBAAAA,Q","sourcesContent":["import {io,Manager} from 'socket.io-client';\nimport {ip} from '../config';\nimport session from './method/storage';\nconst socketUrl = {\n    url: `http://${ip}:5002`,\n    urlMain: '/main',\n}\nconst socketNameSpace = {\n    basic: '/',\n    main:'/main'\n}\n\nexport default class SocketIO extends Manager{\n    constructor() {\n        super(socketUrl.url,{\n            transports: ['websocket'],\n            autoConnect: true,\n            forceNew: true,\n            query: `${session.getItem('token')}siousiou`,\n        })\n    }\n\n    static async getInstance(event = null, params = null, nameSpace = '/') {\n        if (!SocketIO.instance) {\n            SocketIO.instance = new SocketIO()\n        }\n        this.#_connection(SocketIO.instance)\n        this.#_disconnection(SocketIO.instance)\n        if (event) {\n            if (nameSpace === '/') {\n                this.#_emitBasicEvent(SocketIO.instance, event, params)\n            }\n            else if(nameSpace === '/main'){\n                this.#_emitMainEvent(SocketIO.instance, event, params)\n            }\n        }\n        return await SocketIO.instance;\n    }\n\n    static #_connection(instance) {\n        instance.socket('/').on('connect', () => {\n            console.log('socket io is connected')\n        });\n    }\n\n    static #_disconnection(instance) {\n        instance.socket('/').on('disconnect', () => {\n            console.log('has already been disconnected')\n        })\n    }\n\n    static #_emitBasicEvent(instance, event, params) {\n        instance.socket('/').emit(event, params);\n    }\n    \n    static #_emitMainEvent(instance, event, params) {\n        instance.socket('/main').emit(event, params);\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}